# Generated by Django 2.0.2 on 2020-02-05 09:26

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import parsifal.reviews.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('library', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Article',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bibtex_key', models.CharField(max_length=100)),
                ('title', models.CharField(blank=True, max_length=1000, null=True)),
                ('author', models.CharField(blank=True, max_length=1000, null=True)),
                ('journal', models.CharField(blank=True, max_length=1000, null=True)),
                ('year', models.CharField(blank=True, max_length=10, null=True)),
                ('pages', models.CharField(blank=True, max_length=20, null=True)),
                ('volume', models.CharField(blank=True, max_length=100, null=True)),
                ('abstract', models.TextField(blank=True, max_length=4000, null=True)),
                ('document_type', models.CharField(blank=True, max_length=100, null=True)),
                ('status', models.CharField(choices=[('U', 'Unclassified'), ('R', 'Rejected'), ('A', 'Accepted'), ('D', 'Duplicated')], default='U', max_length=1)),
                ('comments', models.TextField(blank=True, max_length=2000, null=True)),
                ('doi', models.CharField(blank=True, max_length=50, null=True)),
                ('url', models.CharField(blank=True, max_length=500, null=True)),
                ('affiliation', models.CharField(blank=True, max_length=500, null=True)),
                ('author_keywords', models.CharField(blank=True, max_length=500, null=True)),
                ('keywords', models.CharField(blank=True, max_length=500, null=True)),
                ('publisher', models.CharField(blank=True, max_length=100, null=True)),
                ('issn', models.CharField(blank=True, max_length=50, null=True)),
                ('language', models.CharField(blank=True, max_length=50, null=True)),
                ('note', models.CharField(blank=True, max_length=500, null=True)),
                ('finished_data_extraction', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='articles_created', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Article',
                'verbose_name_plural': 'Articles',
            },
        ),
        migrations.CreateModel(
            name='DataExtraction',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.TextField(blank=True, null=True)),
                ('article', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='reviews.Article')),
            ],
        ),
        migrations.CreateModel(
            name='DataExtractionField',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(max_length=255)),
                ('field_type', models.CharField(choices=[('B', 'Boolean Field'), ('S', 'String Field'), ('F', 'Float Field'), ('I', 'Integer Field'), ('D', 'Date Field'), ('O', 'Select One Field'), ('M', 'Select Many Field')], max_length=1)),
                ('order', models.IntegerField(default=0)),
            ],
            options={
                'verbose_name': 'Data Extraction Field',
                'verbose_name_plural': 'Data Extraction Fields',
                'ordering': ('order',),
            },
        ),
        migrations.CreateModel(
            name='DataExtractionLookup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.CharField(max_length=1000)),
                ('field', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='reviews.DataExtractionField')),
            ],
            options={
                'verbose_name': 'Lookup Value',
                'verbose_name_plural': 'Lookup Values',
                'ordering': ('value',),
            },
        ),
        migrations.CreateModel(
            name='Keyword',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(max_length=200)),
                ('related_to', models.CharField(blank=True, choices=[('P', 'Population'), ('I', 'Intervention'), ('C', 'Comparison'), ('O', 'Outcome')], max_length=1)),
            ],
            options={
                'verbose_name': 'Keyword',
                'verbose_name_plural': 'Keywords',
                'ordering': ('description',),
            },
        ),
        migrations.CreateModel(
            name='QualityAnswer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(max_length=255)),
                ('weight', models.FloatField()),
            ],
            options={
                'verbose_name': 'Quality Assessment Answer',
                'verbose_name_plural': 'Quality Assessment Answers',
                'ordering': ('-weight',),
            },
        ),
        migrations.CreateModel(
            name='QualityAssessment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('answer', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='reviews.QualityAnswer')),
                ('article', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='reviews.Article')),
            ],
        ),
        migrations.CreateModel(
            name='QualityQuestion',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(max_length=255)),
                ('order', models.IntegerField(default=0)),
            ],
            options={
                'verbose_name': 'Quality Assessment Question',
                'verbose_name_plural': 'Quality Assessment Questions',
                'ordering': ('order',),
            },
        ),
        migrations.CreateModel(
            name='Question',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question', models.CharField(max_length=500)),
                ('order', models.IntegerField(default=0)),
                ('parent_question', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='reviews.Question')),
            ],
            options={
                'verbose_name': 'Question',
                'verbose_name_plural': 'Questions',
                'ordering': ('order',),
            },
        ),
        migrations.CreateModel(
            name='Review',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.SlugField(max_length=255)),
                ('title', models.CharField(max_length=255)),
                ('description', models.CharField(blank=True, max_length=500, null=True)),
                ('create_date', models.DateTimeField(auto_now_add=True)),
                ('last_update', models.DateTimeField(auto_now=True)),
                ('objective', models.TextField(max_length=1000)),
                ('status', models.CharField(choices=[('U', 'Unpublished'), ('P', 'Published')], default='U', max_length=1)),
                ('quality_assessment_cutoff_score', models.FloatField(default=0.0)),
                ('population', models.CharField(blank=True, max_length=200)),
                ('intervention', models.CharField(blank=True, max_length=200)),
                ('comparison', models.CharField(blank=True, max_length=200)),
                ('outcome', models.CharField(blank=True, max_length=200)),
                ('context', models.CharField(blank=True, max_length=200)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('co_authors', models.ManyToManyField(related_name='co_authors', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Review',
                'verbose_name_plural': 'Reviews',
            },
        ),
        migrations.CreateModel(
            name='SearchResult',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('imported_file', models.FileField(null=True, upload_to=parsifal.reviews.models.search_result_file_upload_to)),
                ('documents', models.ManyToManyField(to='library.Document')),
                ('review', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='reviews.Review')),
            ],
        ),
        migrations.CreateModel(
            name='SearchSession',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('search_string', models.TextField(max_length=10000)),
                ('version', models.IntegerField(default=1)),
                ('review', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='reviews.Review')),
            ],
        ),
        migrations.CreateModel(
            name='SelectionCriteria',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('criteria_type', models.CharField(choices=[('I', 'Inclusion'), ('E', 'Exclusion')], max_length=1)),
                ('description', models.CharField(max_length=200)),
                ('review', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='reviews.Review')),
            ],
            options={
                'verbose_name': 'Selection Criteria',
                'verbose_name_plural': 'Selection Criterias',
                'ordering': ('description',),
            },
        ),
        migrations.CreateModel(
            name='Source',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('url', models.CharField(max_length=200)),
                ('is_default', models.BooleanField(default=False)),
            ],
            options={
                'verbose_name': 'Source',
                'verbose_name_plural': 'Sources',
                'ordering': ('name',),
            },
        ),
        migrations.CreateModel(
            name='Study',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('U', 'Unclassified'), ('R', 'Rejected'), ('A', 'Accepted'), ('D', 'Duplicated')], default='U', max_length=1)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('comments', models.TextField(blank=True, max_length=2000, null=True)),
                ('document', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='library.Document')),
                ('source', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='reviews.Source')),
            ],
        ),
        migrations.CreateModel(
            name='StudySelection',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('has_finished', models.BooleanField(default=False)),
                ('review', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='reviews.Review')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='study',
            name='study_selection',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='studies', to='reviews.StudySelection'),
        ),
        migrations.AddField(
            model_name='searchsession',
            name='source',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='reviews.Source'),
        ),
        migrations.AddField(
            model_name='searchresult',
            name='search_session',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='reviews.SearchSession'),
        ),
        migrations.AddField(
            model_name='searchresult',
            name='source',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='reviews.Source'),
        ),
        migrations.AddField(
            model_name='review',
            name='sources',
            field=models.ManyToManyField(to='reviews.Source'),
        ),
        migrations.AddField(
            model_name='question',
            name='review',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='research_questions', to='reviews.Review'),
        ),
        migrations.AddField(
            model_name='qualityquestion',
            name='review',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='reviews.Review'),
        ),
        migrations.AddField(
            model_name='qualityassessment',
            name='question',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='reviews.QualityQuestion'),
        ),
        migrations.AddField(
            model_name='qualityassessment',
            name='user',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='qualityanswer',
            name='review',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='reviews.Review'),
        ),
        migrations.AddField(
            model_name='keyword',
            name='review',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='keywords', to='reviews.Review'),
        ),
        migrations.AddField(
            model_name='keyword',
            name='synonym_of',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='synonyms', to='reviews.Keyword'),
        ),
        migrations.AddField(
            model_name='dataextractionfield',
            name='review',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='reviews.Review'),
        ),
        migrations.AddField(
            model_name='dataextraction',
            name='field',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='reviews.DataExtractionField'),
        ),
        migrations.AddField(
            model_name='dataextraction',
            name='select_values',
            field=models.ManyToManyField(to='reviews.DataExtractionLookup'),
        ),
        migrations.AddField(
            model_name='dataextraction',
            name='user',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='article',
            name='review',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='reviews.Review'),
        ),
        migrations.AddField(
            model_name='article',
            name='selection_criteria',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='reviews.SelectionCriteria'),
        ),
        migrations.AddField(
            model_name='article',
            name='source',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='reviews.Source'),
        ),
        migrations.AddField(
            model_name='article',
            name='updated_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='articles_updated', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterUniqueTogether(
            name='review',
            unique_together={('name', 'author')},
        ),
    ]
